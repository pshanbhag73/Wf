class PerformanceManager {
  constructor(renderer, threshold = 33) {
    this.renderer = renderer;
    this.threshold = threshold;
    this.lastTime = performance.now();
    this.isWeakGPU = this.checkGPU();
  }

  checkGPU() {
    const gl = this.renderer.getContext();
    const isWebGL2 = gl instanceof WebGL2RenderingContext;
    const maxTextures = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);
    return !isWebGL2 || maxTextures < 16;
  }

  checkCPULoad() {
    const currentTime = performance.now();
    const delta = currentTime - this.lastTime;
    this.lastTime = currentTime;
    return delta > this.threshold;
  }

  adjustRendering(scene, camera) {
    if (this.checkCPULoad() || this.isWeakGPU) {
      this.renderer.setPixelRatio(0.5);
      this.renderer.shadowMap.enabled = false;
      scene.traverse((obj) => {
        if (obj.isMesh && obj.material.isMeshStandardMaterial) {
          obj.material = new THREE.MeshBasicMaterial({ color: obj.material.color });
        }
      });
      return false; // Indicate rendering is downgraded
    }
    return true;
  }
}

// Usage
const perfManager = new PerformanceManager(renderer);
function animate() {
  requestAnimationFrame(animate);
  if (perfManager.adjustRendering(scene, camera)) {
    renderer.render(scene, camera);
  }
}
