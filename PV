// In the edgePaths .attr('d'), update to always have horizontal end for merging incoming:
.attr('d', d => {
  const source = graph.node(d.source);
  const target = graph.node(d.target);
  const dx = target.x - source.x;
  const dy = target.y - source.y;
  const arrowLength = 10;
  const endX = target.x - arrowLength; // Horizontal from left
  const endY = target.y;
  if (Math.abs(dy) < 1) { // Nearly horizontal: straight
    return `M${source.x},${source.y} L${endX},${endY}`;
  } else {
    // Curve with horizontal end segment
    const horizontalOffset = 40; // Distance for horizontal end
    const cp2x = target.x - horizontalOffset;
    const cp2y = target.y;
    const sign = Math.sign(dy);
    const sOffset = Math.min(30, Math.abs(dy) / 2); // Scale with dy
    const cp1x = source.x + dx / 3;
    const cp1y = source.y - sOffset * sign; // Initial bulge for S
    return `M${source.x},${source.y} C${cp1x},${cp1y} ${cp2x},${cp2y} ${endX},${endY}`;
  }
})
