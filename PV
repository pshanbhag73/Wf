// Add private properties:
private blinkInterval: any = null;

// In selectDatacenter method:
selectDatacenter(dc: string) {
  this.selectedDatacenter = this.selectedDatacenter === dc ? null : dc;
  if (this.blinkInterval) {
    clearInterval(this.blinkInterval);
    this.blinkInterval = null;
  }
  if (this.selectedDatacenter) {
    this.blinkInterval = setInterval(() => {
      const selectedCircles = this.zoomGroup.selectAll('circle').filter(d => d.datacenter === this.selectedDatacenter);
      selectedCircles.transition().duration(500)
        .attr('stroke-opacity', d => d3.select(this).attr('stroke-opacity') === '1' ? 0.3 : 1);
    }, 1000);
  }
  this.updateViz(); // Re-render to apply highlight
}

// In ngOnDestroy or component destroy:
ngOnDestroy() {
  if (this.blinkInterval) {
    clearInterval(this.blinkInterval);
  }
}

// In circles selection, add base stroke-opacity:
.attr('stroke-opacity', 1)
.attr('stroke', d => d.datacenter === this.selectedDatacenter ? 'red' : 'none')
.attr('stroke-width', d => d.datacenter === this.selectedDatacenter ? 3 : 0)

// Remove .classed('blinking') and related CSS animation
