// In the edgePaths .attr('d'), update for horizontal end segment and adjusted start:
.attr('d', d => {
  const source = graph.node(d.source);
  const target = graph.node(d.target);
  const dx = target.x - source.x;
  const dy = target.y - source.y;
  const radius = 10;
  const horizEnd = 20; // Length of horizontal end segment for arrow alignment
  const threshold = 15;
  const startX = source.x + radius;
  const startY = source.y;
  const endX = target.x - radius;
  const endY = target.y;
  const preEndX = endX - horizEnd;
  const preEndY = endY;
  const dxCurve = preEndX - startX;
  const dyCurve = preEndY - startY;
  if (Math.abs(dy) < threshold) {
    // Straight line with start from edge and end at preEnd then horiz to end
    return `M${startX},${startY} L${endX},${endY}`;
  } else {
    const sign = Math.sign(dy);
    const sOffset = 30;
    const cp1x = startX + dxCurve / 3;
    const cp1y = startY - sOffset * sign;
    const cp2x = preEndX - dxCurve / 3;
    const cp2y = preEndY + sOffset * sign;
    return `M${startX},${startY} C${cp1x},${cp1y} ${cp2x},${cp2y} ${preEndX},${preEndY} L${endX},${endY}`;
  }
})
