// In the edgePaths .attr('d'), update to start from right edge of source and end at left edge of target for single point connect:
.attr('d', d => {
  const source = graph.node(d.source);
  const target = graph.node(d.target);
  const dx = target.x - source.x;
  const dy = target.y - source.y;
  const nodeRadius = 10; // Circle radius
  const startX = source.x + nodeRadius;
  const startY = source.y;
  const endX = target.x - nodeRadius;
  const endY = target.y;
  const threshold = 15;
  if (Math.abs(dy) < threshold) {
    return `M${startX},${startY} L${endX},${endY}`;
  } else {
    const sign = Math.sign(dy);
    const sOffset = 15;
    const curveDx = endX - startX;
    const curveDy = endY - startY;
    const cp1x = startX + curveDx * 0.4;
    const cp1y = startY - sOffset * sign;
    const cp2x = endX - curveDx * 0.4;
    const cp2y = endY + sOffset * sign;
    return `M${startX},${startY} C${cp1x},${cp1y} ${cp2x},${cp2y} ${endX},${endY}`;
  }
})
