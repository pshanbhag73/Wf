// In the edgePaths .attr('d'), update for pronounced S-curve on vertical change:
.attr('d', d => {
  const source = graph.node(d.source);
  const target = graph.node(d.target);
  const dx = target.x - source.x;
  const dy = target.y - source.y;
  const threshold = 15;
  if (Math.abs(dy) < threshold) {
    return `M${source.x},${source.y} L${target.x},${target.y}`;
  } else {
    const sign = Math.sign(dy);
    const sOffset = 30; // Height of S-curve bulge
    const cp1x = source.x + dx / 3;
    const cp1y = source.y - sOffset * sign; // Curve opposite first for S start
    const cp2x = target.x - dx / 3;
    const cp2y = target.y + sOffset * sign; // Then overcompensate for S end
    return `M${source.x},${source.y} C${cp1x},${cp1y} ${cp2x},${cp2y} ${target.x},${target.y}`;
  }
})
